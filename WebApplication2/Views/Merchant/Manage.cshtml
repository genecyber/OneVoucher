@using WebApplication2.Helpers
@model WebApplication2.Controllers.MerchantController.MerchantDetailsViewModel

@{
    ViewBag.Title = "Manage Profile";
    int CashoutTotal = Model.Vouchers.Where(v => v.Paid && v.Spent && !v.CashedOutToMerchant).Sum(x => x.AmoutToLoad);
}
<script>
    $(document).ready(function () {

        $("a:contains('Merchants')").addClass("active");
        $("input[value='Cash-Out'][type='submit']").each(function (index) {
            $(this).click(function(data) {
                $.ajax({
                    url: '/Merchant/RequestCashOut',
                    data: {
                        __RequestVerificationToken: $("[name='__RequestVerificationToken']").val(),
                        UserId: $("#Merchant_UserId").val(),
                        CashoutRequested: "true"
                    },
                    type: 'POST',
                    success: function () {
                        disableCashout('Cash-Out Requested');
                    }
                });
            });
        });
    });
    function disableCashout(v) {
        $("input[value='Cash-Out'][type='submit']").prop('disabled', true);
        $("input[value='Cash-Out'][type='submit']").attr('value', v);
    }
</script>
<div class="main">
    <div class="content_box">
        <div class="col-md-12">
            <h2>Manage Merchant Profile</h2>
            <p>
                Looking for the @Html.ActionLink("Merchant Integration", "Manage", "Merchant") Page?
            </p>
            @{
                var isEnabled = "";
                var val = "Cash-Out";
                var note = "";
                if (Model.Merchant.PayoutRequested)
                {
                    note = "(Pending Cash-Out)";
                    isEnabled = "disabled";
                    val = "Cash-Out Requested";
                }
                if (CashoutTotal.Equals(0))
                {
                    isEnabled = "disabled";
                    val = "Cash-Out Unavailable";
                }
                <div class="border" style="margin: 30px 0 25px 0"></div>
                <div class="grey_box" style="margin-bottom: 30px;">
                    <div class="merchants_main_dv">
                        <h2>Balance: @CashoutTotal @note</h2>
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="CashoutTotal" value="@CashoutTotal" />
                        <input type="submit" value="@val" class="btn btn-default" @isEnabled />
                        <div class="border" style="margin: 30px 0 25px 0"></div>
                        <h2>History</h2>
                        @foreach (var item in Model.Vouchers.Where(a => a.CashedOutToMerchant))
                        {
                            var row = "Cashed Out:" + item.AmoutToLoad + "on " + item.DatePaidout + "<br>";
                            @row
                        }
                        @foreach (var item in Model.Vouchers.Where(a => !a.CashedOutToMerchant && a.MerchantSpentAtId.Equals(Guid.Parse(Model.Merchant.UserId))))
                        {
                            var row = "Voucher Spent " + item.AmoutToLoad + " on " + item.DatePaidout;
                            <p>@row</p>
                        }
                    </div>
                    <div class="merchants_shadow"></div><!--merchants_shadow-->
                </div>
                <!--merchants_main_dv-->
            }
    <div class="grey_box" style="margin-bottom: 30px;">
        <div class="merchants_main_dv">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.Merchant.UserId)

                    @*<div class="form-group clear">
                            @Html.LabelFor(model => model.SecretSauce, new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SecretSauce)
                                @Html.ValidationMessageFor(model => model.SecretSauce)
                            </div>
                        </div>*@

                    <div class="form-group clear">
                        <label class="control-label col-md-2" for="Sauce">Sauce</label>
                        <div class="col-md-10">
                            <input class="text-box single-line disabled" id="Sauce" name="Sauce" type="text" alt="@Model.Merchant.SecretSauce" value="@Model.Merchant.SecretSauce.ToString().Substring(5, 31)" disabled="disabled">
                        </div>
                    </div>

                    <div class="form-group clear">
                        <label class="control-label col-md-2" for="Secret">Secret</label>
                        <div class="col-md-10">
                            <input class="text-box single-line disabled" id="Secret" name="Secret" type="text" value="@Model.Merchant.SecretSauce.ToString().Substring(0, 5)" disabled="disabled">
                        </div>
                    </div>

                    <div class="form-group clear">
                        @Html.LabelFor(model => model.Merchant.ImageUrl, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Merchant.ImageUrl)
                            @Html.ValidationMessageFor(model => model.Merchant.ImageUrl)
                        </div>
                    </div>

                    <div class="form-group clear">
                        @Html.LabelFor(model => model.Merchant.WebsiteUrl, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Merchant.WebsiteUrl)
                            @Html.ValidationMessageFor(model => model.Merchant.WebsiteUrl)
                        </div>
                    </div>

                    <div class="form-group clear">
                        @Html.LabelFor(model => model.Merchant.WebsiteName, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Merchant.WebsiteName)
                            @Html.ValidationMessageFor(model => model.Merchant.WebsiteName)
                        </div>
                    </div>

                    <div class="form-group clear">
                        @Html.LabelFor(model => model.Merchant.WebsiteDescription, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Merchant.WebsiteDescription)
                            @Html.ValidationMessageFor(model => model.Merchant.WebsiteDescription)
                        </div>
                    </div>

                    <div class="form-group clear">
                        @Html.LabelFor(model => model.Merchant.VendorSelect, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Merchant.VendorSelect)
                            @Html.ValidationMessageFor(model => model.Merchant.VendorSelect)
                        </div>
                    </div>

                    <div class="form-group clear">
                        @Html.LabelFor(model => model.Merchant.VendorDetails, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Merchant.VendorDetails)
                            @Html.ValidationMessageFor(model => model.Merchant.VendorDetails)
                        </div>
                    </div>

                    <div class="form-group clear">
                        @Html.LabelFor(model => model.Merchant.EmailAddress, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Merchant.EmailAddress)
                            @Html.ValidationMessageFor(model => model.Merchant.EmailAddress)
                        </div>
                    </div>



                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }


        </div>
        <div class="merchants_shadow"></div><!--merchants_shadow-->
    </div><!--merchants_main_dv-->

</div><!--grey_box-->
            </div><!--content_box-->
        </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
